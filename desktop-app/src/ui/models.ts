export enum KeyNum {
    Escape = 0,
    F1 = 1,
    F2 = 2,
    F3 = 3,
    F4 = 4,
    F5 = 5,
    F6 = 6,
    F7 = 7,
    F8 = 8,
    F9 = 9,
    F10 = 10,
    F11 = 11,
    F12 = 12,
    F13 = 13,
    F14 = 14,
    F15 = 15,
    F16 = 16,
    F17 = 17,
    F18 = 18,
    F19 = 19,
    F20 = 20,
    F21 = 21,
    F22 = 22,
    F23 = 23,
    F24 = 24,
    Print = 25,
    ScrollLock = 26,
    Pause = 27,
    Grave = 28,
    Num1 = 29,
    Num2 = 30,
    Num3 = 31,
    Num4 = 32,
    Num5 = 33,
    Num6 = 34,
    Num7 = 35,
    Num8 = 36,
    Num9 = 37,
    Num0 = 38,
    Minus = 39,
    Equal = 40,
    Backspace = 41,
    Insert = 42,
    Home = 43,
    PageUp = 44,
    NumLock = 45,
    NumPadEqual = 46,
    Divide = 47,
    Multiply = 48,
    Subtract = 49,
    Tab = 50,
    Q = 51,
    W = 52,
    E = 53,
    R = 54,
    T = 55,
    Y = 56,
    U = 57,
    I = 58,
    O = 59,
    P = 60,
    LeftBracket = 61,
    RightBracket = 62,
    Backslash = 63,
    Delete = 64,
    End = 65,
    PageDown = 66,
    NumPad7 = 67,
    NumPad8 = 68,
    NumPad9 = 69,
    Add = 70,
    CapsLock = 71,
    A = 72,
    S = 73,
    D = 74,
    F = 75,
    G = 76,
    H = 77,
    J = 78,
    K = 79,
    L = 80,
    Semicolon = 81,
    Quote = 82,
    Return = 83,
    NumPad4 = 84,
    NumPad5 = 85,
    NumPad6 = 86,
    LeftShift = 87,
    Z = 88,
    X = 89,
    C = 90,
    V = 91,
    B = 92,
    N = 93,
    M = 94,
    Comma = 95,
    Period = 96,
    Slash = 97,
    RightShift = 98,
    Up = 99,
    NumPad1 = 100,
    NumPad2 = 101,
    NumPad3 = 102,
    Enter = 103,
    LeftControl = 104,
    LeftSuper = 105,
    LeftWin = 106,
    LeftCmd = 107,
    LeftAlt = 108,
    Space = 109,
    RightAlt = 110,
    RightSuper = 111,
    RightWin = 112,
    RightCmd = 113,
    Menu = 114,
    RightControl = 115,
    Fn = 116,
    Left = 117,
    Down = 118,
    Right = 119,
    NumPad0 = 120,
    Decimal = 121,
    Clear = 122,
    AudioMute = 123,
    AudioVolDown = 124,
    AudioVolUp = 125,
    AudioPlay = 126,
    AudioStop = 127,
    AudioPause = 128,
    AudioPrev = 129,
    AudioNext = 130,
    AudioRewind = 131,
    AudioForward = 132,
    AudioRepeat = 133,
    AudioRandom = 134
}

export enum ButtonNum {
    LEFT = 0,
    MIDDLE = 1,
    RIGHT = 2
}

// Mapping from keyboard layout strings to KeyNum enum values
export const keyboardToKeyNumMap: Record<string, KeyNum> = {
    // Function keys and escape
    "{escape}": KeyNum.Escape,
    "{f1}": KeyNum.F1,
    "{f2}": KeyNum.F2,
    "{f3}": KeyNum.F3,
    "{f4}": KeyNum.F4,
    "{f5}": KeyNum.F5,
    "{f6}": KeyNum.F6,
    "{f7}": KeyNum.F7,
    "{f8}": KeyNum.F8,
    "{f9}": KeyNum.F9,
    "{f10}": KeyNum.F10,
    "{f11}": KeyNum.F11,
    "{f12}": KeyNum.F12,
    
    // Main keyboard - top row
    "`": KeyNum.Grave,
    "1": KeyNum.Num1,
    "2": KeyNum.Num2,
    "3": KeyNum.Num3,
    "4": KeyNum.Num4,
    "5": KeyNum.Num5,
    "6": KeyNum.Num6,
    "7": KeyNum.Num7,
    "8": KeyNum.Num8,
    "9": KeyNum.Num9,
    "0": KeyNum.Num0,
    "-": KeyNum.Minus,
    "=": KeyNum.Equal,
    "{backspace}": KeyNum.Backspace,
    
    // Main keyboard - second row
    "{tab}": KeyNum.Tab,
    "q": KeyNum.Q,
    "w": KeyNum.W,
    "e": KeyNum.E,
    "r": KeyNum.R,
    "t": KeyNum.T,
    "y": KeyNum.Y,
    "u": KeyNum.U,
    "i": KeyNum.I,
    "o": KeyNum.O,
    "p": KeyNum.P,
    "[": KeyNum.LeftBracket,
    "]": KeyNum.RightBracket,
    "\\": KeyNum.Backslash,
    
    // Main keyboard - third row
    "{capslock}": KeyNum.CapsLock,
    "a": KeyNum.A,
    "s": KeyNum.S,
    "d": KeyNum.D,
    "f": KeyNum.F,
    "g": KeyNum.G,
    "h": KeyNum.H,
    "j": KeyNum.J,
    "k": KeyNum.K,
    "l": KeyNum.L,
    ";": KeyNum.Semicolon,
    "'": KeyNum.Quote,
    "{enter}": KeyNum.Enter,
    
    // Main keyboard - fourth row
    "{shiftleft}": KeyNum.LeftShift,
    "z": KeyNum.Z,
    "x": KeyNum.X,
    "c": KeyNum.C,
    "v": KeyNum.V,
    "b": KeyNum.B,
    "n": KeyNum.N,
    "m": KeyNum.M,
    ",": KeyNum.Comma,
    ".": KeyNum.Period,
    "/": KeyNum.Slash,
    "{shiftright}": KeyNum.RightShift,
    
    // Main keyboard - bottom row
    "{controlleft}": KeyNum.LeftControl,
    "{altleft}": KeyNum.LeftAlt,
    "{metaleft}": KeyNum.LeftCmd, // or LeftSuper
    "{space}": KeyNum.Space,
    "{metaright}": KeyNum.RightCmd, // or RightSuper
    "{altright}": KeyNum.RightAlt,
    
    // Control pad
    "{prtscr}": KeyNum.Print,
    "{scrolllock}": KeyNum.ScrollLock,
    "{pause}": KeyNum.Pause,
    "{insert}": KeyNum.Insert,
    "{home}": KeyNum.Home,
    "{pageup}": KeyNum.PageUp,
    "{delete}": KeyNum.Delete,
    "{end}": KeyNum.End,
    "{pagedown}": KeyNum.PageDown,
    
    // Arrow keys
    "{arrowup}": KeyNum.Up,
    "{arrowleft}": KeyNum.Left,
    "{arrowdown}": KeyNum.Down,
    "{arrowright}": KeyNum.Right,
    
    // Numpad
    "{numlock}": KeyNum.NumLock,
    "{numpaddivide}": KeyNum.Divide,
    "{numpadmultiply}": KeyNum.Multiply,
    "{numpad7}": KeyNum.NumPad7,
    "{numpad8}": KeyNum.NumPad8,
    "{numpad9}": KeyNum.NumPad9,
    "{numpad4}": KeyNum.NumPad4,
    "{numpad5}": KeyNum.NumPad5,
    "{numpad6}": KeyNum.NumPad6,
    "{numpad1}": KeyNum.NumPad1,
    "{numpad2}": KeyNum.NumPad2,
    "{numpad3}": KeyNum.NumPad3,
    "{numpad0}": KeyNum.NumPad0,
    "{numpaddecimal}": KeyNum.Decimal,
    "{numpadsubtract}": KeyNum.Subtract,
    "{numpadadd}": KeyNum.Add,
    "{numpadenter}": KeyNum.Return
  };

  export const shiftKeyboardToKeyNumMap: Record<string, KeyNum> = {
    // Additional mappings for shift layout symbols
    "~": KeyNum.Grave,
    "!": KeyNum.Num1,
    "@": KeyNum.Num2,
    "#": KeyNum.Num3,
    "$": KeyNum.Num4,
    "%": KeyNum.Num5,
    "^": KeyNum.Num6,
    "&": KeyNum.Num7,
    "*": KeyNum.Num8,
    "(": KeyNum.Num9,
    ")": KeyNum.Num0,
    "_": KeyNum.Minus,
    "+": KeyNum.Equal,
    "{": KeyNum.LeftBracket,
    "}": KeyNum.RightBracket,
    "|": KeyNum.Backslash,
    ":": KeyNum.Semicolon,
    "\"": KeyNum.Quote,
    "<": KeyNum.Comma,
    ">": KeyNum.Period,
    "?": KeyNum.Slash,

    "Q": KeyNum.Q,
    "W": KeyNum.W,
    "E": KeyNum.E,
    "R": KeyNum.R,
    "T": KeyNum.T,
    "Y": KeyNum.Y,
    "U": KeyNum.U,
    "I": KeyNum.I,
    "O": KeyNum.O,
    "P": KeyNum.P,

    "A": KeyNum.A,
    "S": KeyNum.S,
    "D": KeyNum.D,
    "F": KeyNum.F,
    "G": KeyNum.G,
    "H": KeyNum.H,
    "J": KeyNum.J,
    "K": KeyNum.K,
    "L": KeyNum.L,

    "Z": KeyNum.Z,
    "X": KeyNum.X,
    "C": KeyNum.C,
    "V": KeyNum.V,
    "B": KeyNum.B,
    "N": KeyNum.N,
    "M": KeyNum.M,
    
    // Reuse the rest of the mappings from the default layout
    ...Object.entries(keyboardToKeyNumMap)
      .filter(([key]) => key.startsWith('{'))
      .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {})
  };

  export const keyNumToKeyboardMap: Record<KeyNum, string> = Object.fromEntries(
    Object.entries(keyboardToKeyNumMap).map(([key, value]) => [value, key])
  ) as Record<KeyNum, string>;

  export const modifiers: KeyNum[] = [
    KeyNum.LeftControl,
    KeyNum.RightControl,
    KeyNum.LeftAlt,
    KeyNum.RightAlt,
    KeyNum.LeftShift,
    KeyNum.RightShift,
  ]